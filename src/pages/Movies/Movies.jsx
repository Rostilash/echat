import React, { useEffect, useState } from "react";

export const Movies = () => {
  const [movies, setMovies] = useState([]);
  const [loading, setLoading] = useState(true);

  const [searchTerm, setSearchTerm] = useState("");
  const [selectedGenre, setSelectedGenre] = useState("");

  const [query, setQuery] = useState("");
  const [genre, setGenre] = useState("");

  const [page, setPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);

  const genreMap = {
    Action: "–ë–æ–π–æ–≤–∏–∫",
    Drama: "–î—Ä–∞–º–∞",
    Comedy: "–ö–æ–º–µ–¥—ñ—è",
    Horror: "–ñ–∞—Ö–∏",
    Romance: "–†–æ–º–∞–Ω—Ç–∏–∫–∞",
    Thriller: "–¢—Ä–∏–ª–µ—Ä",
    Sci_Fi: "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞",
    Animation: "–ê–Ω—ñ–º–∞—Ü—ñ—è",
    Documentary: "–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω–∏–π",
    Crime: "–ö—Ä–∏–º—ñ–Ω–∞–ª",
    Biography: "–ë—ñ–æ–≥—Ä–∞—Ñ—ñ—è",
    Sport: "–°–ø–æ—Ä—Ç",
    Fantasy: "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞",
    Adventure: "–ü—Ä–∏–≥–æ–¥–∏",
    Mystery: "–ú—ñ—Å—Ç–∏–∫–∞",
    Music: "–ú—É–∑–∏–∫–∞",
  };

  useEffect(() => {
    setLoading(true);

    const params = new URLSearchParams();
    params.append("limit", "12");

    if (!query && !genre) {
      params.append("page", page.toString());
    }

    if (query) {
      params.append("query_term", query);
    }

    if (genre) {
      params.append("genre", genre);
    }

    const url = `https://yts.mx/api/v2/list_movies.json?${params.toString()}`;

    fetch(url)
      .then((res) => res.json())
      .then((data) => {
        const { movie_count, movies, limit, page_number } = data.data;
        setTotalPages(Math.ceil(movie_count / limit));
        setPage(page_number);
        setMovies(movies || []);
        setLoading(false);
      })
      .catch(() => setLoading(false));
  }, [query, genre, page]);

  const handleSearch = () => {
    setQuery(searchTerm.trim());
    setGenre(selectedGenre);
    setPage(1);
  };

  const handlePrevPage = () => {
    if (page > 1) setPage((prev) => prev - 1);
  };

  const handleNextPage = () => {
    if (page < totalPages) setPage((prev) => prev + 1);
  };

  return (
    <div style={{ padding: "20px" }}>
      <div style={{ marginBottom: "20px", display: "flex", gap: "10px", alignItems: "center" }}>
        <input
          type="text"
          placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ñ—ñ–ª—å–º—É –Ω–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ–π"
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          style={{ padding: "8px", width: "300px" }}
        />
        <select value={selectedGenre} onChange={(e) => setSelectedGenre(e.target.value)}>
          <option value="">–í—Å—ñ –∂–∞–Ω—Ä–∏</option>
          {Object.entries(genreMap).map(([eng, ukr]) => (
            <option key={eng} value={eng}>
              {ukr}
            </option>
          ))}
        </select>
        <button onClick={handleSearch}>üîç –ü–æ—à—É–∫</button>
      </div>

      {loading && <div>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>}
      {!loading && movies.length === 0 && <p>–§—ñ–ª—å–º–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>}

      <div style={{ display: "grid", gridTemplateColumns: "repeat(3, 1fr)", gap: "20px" }}>
        {!loading &&
          movies.map((movie) => {
            const translatedGenre = genreMap[movie.genres?.[0]] || movie.genres?.[0];
            return (
              <div key={movie.id} style={{ border: "1px solid #ccc", padding: "10px", borderRadius: "10px" }}>
                <img src={movie.medium_cover_image} alt={movie.title} style={{ width: "100%" }} />
                <h3>{movie.title}</h3>
                <p>–†–µ–π—Ç–∏–Ω–≥: {movie.rating}</p>
                <p>–†—ñ–∫: {movie.year}</p>
                <p>–ñ–∞–Ω—Ä: {translatedGenre ? translatedGenre : ""}</p>
              </div>
            );
          })}
      </div>

      <div style={{ marginTop: "20px", display: "flex", justifyContent: "center", gap: "10px" }}>
        <button onClick={handlePrevPage} disabled={page === 1}>
          ‚¨Ö –ü–æ–ø–µ—Ä–µ–¥–Ω—è
        </button>
        <span>
          –°—Ç–æ—Ä—ñ–Ω–∫–∞ {page} –∑ {totalPages}
        </span>
        <button onClick={handleNextPage} disabled={page === totalPages}>
          –ù–∞—Å—Ç—É–ø–Ω–∞ ‚û°
        </button>
      </div>
    </div>
  );
};
